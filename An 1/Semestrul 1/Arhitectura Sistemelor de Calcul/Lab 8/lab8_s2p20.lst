     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  ; declare external functions needed by our program
     6                                  extern exit, fopen, fread, fclose, fprintf
     7                                  import exit msvcrt.dll  
     8                                  import fopen msvcrt.dll  
     9                                  import fread msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 616E647265692E7478-         nume_fisier db "andrei.txt", 0  
    15 00000009 7400               
    16 0000000B 6100                        mod_acces db "a", 0          
    17                                                                  
    18 0000000D FFFFFFFF                    descriptor_fis dd -1                                  
    19 00000011 416E61206172652073-         text db "Ana are si pere.", 0
    19 0000001A 6920706572652E00   
    20                                      len equ $-text
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 68[0B000000]                    push dword mod_acces     
    26 00000005 68[00000000]                    push dword nume_fisier
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp, 4*2                ; eliberam parametrii de pe stiva
    29                                  
    30 00000013 A3[0D000000]                    mov [descriptor_fis], eax   ; salvam valoarea returnata de fopen in variabila descriptor_fis
    31                                          
    32                                          ; verificam daca functia fopen a creat cu succes fisierul (daca EAX != 0)
    33 00000018 83F800                          cmp eax, 0
    34 0000001B 7448                            je final
    35                                          
    36 0000001D BE00000000                      mov esi, 0
    37 00000022 B911000000                      mov ecx, len
    38 00000027 FC                              cld
    39 00000028 E318                            jecxz finalbucla
    40                                          
    41                                       repeta:
    42 0000002A F7C601000000                    test esi, 1
    43 00000030 7403                            jz par
    44 00000032 46                              inc esi
    45 00000033 E2F5                            loop repeta
    46                                          
    47                                       par:
    48 00000035 89F0                            mov eax, esi
    49 00000037 0430                            add al, '0'
    50 00000039 8886[11000000]                  mov [text+esi], al
    51 0000003F 46                              inc esi
    52 00000040 E2E8                            loop repeta
    53                                          
    54                                       finalbucla:
    55 00000042 68[11000000]                    push dword text
    56 00000047 FF35[0D000000]                  push dword [descriptor_fis]
    57 0000004D FF15[00000000]                  call [fprintf]
    58 00000053 83C408                          add esp, 4*2
    59                                          
    60 00000056 FF35[0D000000]                  push dword [descriptor_fis]
    61 0000005C FF15[00000000]                  call [fclose]
    62 00000062 83C404                          add esp, 4
    63                                          
    64                                       final:
    65                                          
    66                                          ; exit(0)
    67 00000065 6A00                            push    dword 0      
    68 00000067 FF15[00000000]                  call    [exit]  
