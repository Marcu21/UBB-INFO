     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 17000000                    a dd 23
    14 00000004 0A000000                    b dd 10
    15 00000008 436174203D2025642C-         message db "Cat = %d, rest = %d", 0
    15 00000011 2072657374203D2025-
    15 0000001A 6400               
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 A1[00000000]                    mov eax, [a]
    21 00000005 8B1D[04000000]                  mov ebx, [b]
    22 0000000B 31D2                            xor edx, edx
    23 0000000D F7F3                            div ebx
    24 0000000F 52                              push edx
    25 00000010 50                              push eax
    26 00000011 68[08000000]                    push dword message
    27 00000016 FF15[00000000]                  call [printf]
    28                                      
    29                                          ; exit(0)
    30 0000001C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    31 0000001E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
