     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fread, fclose, fprintf, scanf
     8                                  import exit msvcrt.dll  
     9                                  import fopen msvcrt.dll  
    10                                  import fread msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  import scanf msvcrt.dll
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 37646976322E747874-         nume_fisier db "7div2.txt", 0  
    16 00000009 00                 
    17 0000000A 6100                        mod_acces db "a", 0  
    18 0000000C FFFFFFFF                    descriptor_fis dd -1 
    19 00000010 256400                      format db "%d", 0
    20 00000013 00000000                    a dd 0
    21 00000017 00000000                    b dd 0
    22 0000001B 436174203D2025640A-         text1 db "Cat = %d", 0x0A, 0
    22 00000024 00                 
    23 00000025 72657374203D202564-         text2 db "rest = %d", 0
    23 0000002E 00                 
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[13000000]                    push dword a
    29 00000005 68[10000000]                    push dword format 
    30 0000000A FF15[00000000]                  call [scanf]
    31 00000010 68[17000000]                    push dword b
    32 00000015 68[10000000]                    push dword format 
    33 0000001A FF15[00000000]                  call [scanf]
    34                                          
    35 00000020 68[0A000000]                    push dword mod_acces     
    36 00000025 68[00000000]                    push dword nume_fisier
    37 0000002A FF15[00000000]                  call [fopen]
    38 00000030 83C408                          add esp, 4*2                
    39                                  
    40 00000033 A3[0C000000]                    mov [descriptor_fis], eax   
    41                                          
    42 00000038 83F800                          cmp eax, 0
    43 0000003B 7449                            je final
    44                                          
    45 0000003D A1[13000000]                    mov eax, [a]
    46 00000042 8B1D[17000000]                  mov ebx, [b]
    47 00000048 31D2                            xor edx, edx
    48 0000004A F7F3                            div ebx
    49                                          
    50 0000004C 52                              push edx
    51 0000004D 50                              push eax
    52                                          
    53                                          
    54 0000004E 68[1B000000]                    push dword text1
    55 00000053 FF35[0C000000]                  push dword [descriptor_fis]
    56 00000059 FF15[00000000]                  call [fprintf]
    57 0000005F 83C408                          add esp, 4*2
    58                                          
    59 00000062 58                              pop eax
    60                                          
    61 00000063 68[25000000]                    push dword text2
    62 00000068 FF35[0C000000]                  push dword [descriptor_fis]
    63 0000006E FF15[00000000]                  call [fprintf]
    64 00000074 83C408                          add esp, 4*2
    65                                          
    66 00000077 FF35[0C000000]                  push dword [descriptor_fis]
    67 0000007D FF15[00000000]                  call [fclose]
    68 00000083 83C404                          add esp, 4
    69                                      final:
    70                                          ; exit(0)
    71 00000086 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    72 00000088 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
