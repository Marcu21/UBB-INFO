     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; 3*[20*(b-a+2)-10*c]+2*(d-3)
    14                                      ;a,b,c - byte, d - word
    15                                      ;3*[20*(20-4+2)-10*3]+2*(280-3)=1544
    16 00000000 04                          a db 4
    17 00000001 14                          b db 20
    18 00000002 03                          c db 3
    19 00000003 1801                        d dw 280
    20                                  
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 66B81400                        mov ax, 20
    25 00000004 8A1D[01000000]                  mov bl, [b]
    26 0000000A 2A1D[00000000]                  sub bl, [a]
    27 00000010 80C302                          add bl, 2
    28 00000013 F6E3                            mul bl ; ax=20*(b-a+2)
    29 00000015 6689C1                          mov cx, ax 
    30 00000018 66B80A00                        mov ax, 10
    31 0000001C 8A1D[02000000]                  mov bl, [c]
    32 00000022 F6E3                            mul bl ;ax=10*c
    33 00000024 6629C1                          sub cx, ax ;cx=20*(b-a+2)-10*c
    34 00000027 66B80300                        mov ax, 3
    35 0000002B 66F7E1                          mul cx ;ax=3*[20*(b-a+2)-10*c]
    36 0000002E 6689C1                          mov cx, ax 
    37 00000031 66B80200                        mov ax, 2
    38 00000035 668B1D[03000000]                mov bx, [d]
    39 0000003C 6683EB03                        sub bx, 3
    40 00000040 66F7E3                          mul bx 
    41 00000043 6601C8                          add ax, cx 
    42                                          
    43                                      
    44                                          ; exit(0)
    45 00000046 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 00000048 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
