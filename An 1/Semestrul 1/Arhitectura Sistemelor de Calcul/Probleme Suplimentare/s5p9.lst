     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; (2*d+e)/a
    14                                      ; a,b,c,d-byte, e,f,g,h-word
    15                                      ; (2*10+300)/2=160
    16 00000000 02                          a db 2
    17 00000001 0A                          d db 10
    18 00000002 2C01                        e dw 300
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 66B80200                        mov ax, 2
    23 00000004 8A1D[01000000]                  mov bl, [d]
    24 0000000A F6E3                            mul bl
    25 0000000C 660305[02000000]                add ax, [e] 
    26 00000013 8A1D[00000000]                  mov bl, [a]
    27 00000019 F6F3                            div bl
    28                                      
    29                                          ; exit(0)
    30 0000001B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    31 0000001D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
