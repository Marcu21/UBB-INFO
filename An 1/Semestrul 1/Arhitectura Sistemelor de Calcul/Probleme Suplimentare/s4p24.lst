     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; (10*a-5*b)+(d-5*c)
    14                                      ;a,b,c - byte, d - word
    15                                      ; (10*4-5*3)+(355-5*11)=25+300=325
    16 00000000 04                          a db 4
    17 00000001 03                          b db 3
    18 00000002 0B                          c db 11
    19 00000003 6301                        d dw 355
    20                                  
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 66B80500                        mov ax, 5
    25 00000004 8A1D[01000000]                  mov bl, [b]
    26 0000000A F6E3                            mul bl
    27 0000000C 6689C1                          mov cx, ax
    28 0000000F 66B80A00                        mov ax, 10
    29 00000013 8A1D[00000000]                  mov bl, [a]
    30 00000019 F6E3                            mul bl 
    31 0000001B 6629C8                          sub ax, cx ;ax=(10*a-5*b)
    32 0000001E 6689C1                          mov cx, ax 
    33 00000021 66B80500                        mov ax, 5
    34 00000025 8A1D[02000000]                  mov bl, [c]
    35 0000002B F6E3                            mul bl 
    36 0000002D 6689C3                          mov bx, ax 
    37 00000030 66A1[03000000]                  mov ax, [d]
    38 00000036 6629D8                          sub ax, bx 
    39 00000039 6601C8                          add ax, cx 
    40                                      
    41                                          ; exit(0)
    42 0000003C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 0000003E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
